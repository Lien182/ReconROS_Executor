#
# General settings
#
#   TargetBoard - board to run you application on
#   TargetOS    - operating system to use
#   SystemClock - clock of the ReconOS system
#   CFlags      - additional flags for compilation
#   LdFlags     - additional flags for linking
#
[General]
Name = ReconfAdapt
TargetBoard = miniitx,d
TargetPart = xc7z100ffg900-2
ReferenceDesign = timer_hwpr
TargetOS = linux
TargetXil = vivado,2020.1
TargetHls = vivado,2020.1
SystemClock = System
CFlags = -I $(RECONOS)/linux/tools/timer -I ../ -I ../Thirdparty/Pangolin/include -I /usr/include/eigen3/ -O3 -Wno-deprecated -Wno-unused-variable -Wno-deprecated-declarations -Wno-sign-compare -Wno-unused-label
LdFlags = -L $(RECONOS)/linux/tools/timer -ltimer -lm -lstdc++ `pkg-config --cflags --libs opencv` -L ../Thirdparty/DBoW2/lib/
PartialReconfiguration = true
ROS2Distribution = dashing
CPUArchitecture = arm32


#
# Clock definition
#
#   ClockSource - static or reconfigurable clock
#   ClockFreq   - initial clock frequency
#
[Clock@System]
ClockSource = static
ClockFreq = 100000000

[Clock@Threads]
ClockSource = dynamic
ClockFreq = 120000000


#
# Specification of hardware thread slots
#
#   Id               - id of the slot
#   Clock            - clock connected to the slot
#
[HwSlot@ReconfSlotSmall(0:1)]
Id = 0
Clock = Threads
Reconfigurable = true
Region_0 = SLICE_X0Y150:SLICE_X103Y199, DSP48_X0Y60:DSP48_X7Y79, RAMB18_X0Y60:RAMB18_X5Y79, RAMB36_X0Y30:RAMB36_X5Y39
Region_1 = SLICE_X0Y100:SLICE_X103Y149, DSP48_X0Y40:DSP48_X7Y59, RAMB18_X0Y40:RAMB18_X5Y59, RAMB36_X0Y20:RAMB36_X5Y29

[HwSlot@ReconfSlotLarge(0:1)]
Id = 2
Clock = Threads
Reconfigurable = true
Region_0 = SLICE_X0Y0:SLICE_X103Y99,   DSP48_X0Y0:DSP48_X7Y39,  RAMB18_X0Y0:RAMB18_X5Y39,  RAMB36_X0Y0:RAMB36_X5Y19
Region_1 = SLICE_X104Y0:SLICE_X205Y99, DSP48_X8Y0:DSP48_X14Y39, RAMB18_X6Y0:RAMB18_X10Y39, RAMB36_X6Y0:RAMB36_X10Y19




#
# Resource definition
#
#   <Name> - type,<optional arguments>
#
[ResourceGroup@RSobel]
image_msg = rosmsg, sensor_msgs ,msg ,Image 
image_msg_out = rosmsg, sensor_msgs ,msg ,Image 
node_1 = rosnode, "fiternode"
SubData = rossub, node_1, image_msg, "/image_raw", 10000
PubData = rospub, node_1, image_msg_out, "filtered"

[ResourceGroup@RSort]
sort_srv = rossrvmsg, sorter_msgs ,srv ,Sort 
node_1 = rosnode, "sortnode"
srv = rossrvs, node_1, sort_srv, "sorter", 10000

[ResourceGroup@RInverse]
input_msg = rosmsg, std_msgs ,msg ,U_Int32 
output_msg = rosmsg, std_msgs ,msg ,U_Int32
node_1 = rosnode, "inverse_node"
SubData = rossub, node_1, input_msg, "/angle", 10000
PubData = rospub, node_1, output_msg, "legangle"

[ResourceGroup@RMnist]
image_msg = rosmsg, sensor_msgs ,msg ,Image 
output_msg = rosmsg, std_msgs ,msg ,U_Int32
node_1 = rosnode, "mnist_node"
SubData = rossub, node_1, image_msg, "/image_classification", 10000
PubData = rospub, node_1, output_msg, "class"

[ResourceGroup@Rperiodic]
output_msg = rosmsg, std_msgs ,msg ,U_Int32_Multi_Array
pnode = rosnode, "periodic_node"
periodic_tmr  = rostmr, pnode, 250.0
pub_out = rospub, pnode, output_msg, "/hash"
srcmem = mem, 1555200

#
# Specification of thread types
#
#   Slot          - slot to implement the hardware thread in
#   Source        - source if the hardware thread
#   ResourceGroup - resources of the hardware thread
#

[ReconosThread@Sobel]
Slot = ReconfSlotLarge(*)
HwSource = hls
SwSource = c
ResourceGroup = RSobel

[ReconosThread@SortDemo]
Slot = ReconfSlotSmall(*)
HwSource = hls
SwSource = c
ResourceGroup = RSort

[ReconosThread@Inverse]
Slot = ReconfSlotSmall(*)
HwSource = hls
SwSource = c
ResourceGroup = RInverse
UseMem = true

[ReconosThread@Mnist]
Slot = ReconfSlotLarge(*)
HwSource = hls
SwSource = c
ResourceGroup = RMnist
UseMem = true

[ReconosThread@Periodic]
Slot = ReconfSlotLarge(*)
HwSource = hls
SwSource = c
ResourceGroup = Rperiodic
UseMem = true
